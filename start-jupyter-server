#!/bin/bash

# Start a Jupyter notebook server and write out instructions
# for ssh port forwarding
# Note: it is assumed that the port where notebook server is started
# is available in the local machine

source /usr/local/gromacs/bin/GMXRC
source $VENV/bin/activate

# set an env variable, find hostname of compute node
XDG_RUNTIME_DIR=""
NODENAME=$(hostname)


#start notebook server and redirect stderr
jupyter notebook --no-browser 2> jupyter.$SLURM_JOB_ID.out &
pid=$!

# find url with token and port for ssh forwarding
# the while loop ensures that the server has been started
url=""
while [ -z "$url" ]
do
    sleep 3
    url=`jupyter notebook list | sed -n 's/\(http.*\) ::.*/\1/p'`
done
port=`echo $url | sed -e 's/.*host:\([0-9]*\).*/\1/'`

# write out tunneling instructions 
echo -e "
    If you have set up ssh-key login to Puhti, do this:
    Copy/Paste this in your local terminal to ssh tunnel with remote
    -----------------------------------------------------------------
    Linux / macOS / MobaXTerm / Cmder:
    ssh -N -L $port:localhost:$port -J $USER@puhti.csc.fi $USER@$NODENAME

    OR

    If you haven't set up ssh-key based login to Puhti, do this:
    Copy/Paste this in your local terminal but replace NNNN as follows
    NNNN -> 5000 + the number in your training account i.e. unique to you.
    -----------------------------------------------------------------
    Linux / macOS / MobaXTerm / Cmder / Windows PowerShell:
    ssh  -L NNNN:localhost:NNNN  $USER@puhti.csc.fi ssh -L NNNN:localhost:$port $USER@$NODENAME
    -----------------------------------------------------------------
    "

nnnnurl=`echo $url | sed s/$port/NNNN/`
echo -e "
    Copy/Paste this URL into your browser (without ssh-key connection
    replace the port below with the NNNN you used above).
    -----------------------------------------------------------------
    $url
    OR
    $nnnnurl
    -----------------------------------------------------------------
    "

# Trap CTRL-C and wait for the server
trap "kill -1 $pid" SIGINT
wait $pid
